#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : ClColTaches
 major_version : 27
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x136ea9ae232bdb11
 internal_properties : BwAAAAcAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  type_code : 10
  p_codes :
   -
     code : |1-
      ClColTaches est une Classe
      	hérite de ClZF_ColObjDB
      prive
      	m_aoTaches est un tableau de ClDbTache dynamique
      fin
      
      constante
      	cstTachesDeUS	= 1
      fin
     type : 131072
  procedures :
   -
     name : Constructeur
     procedure_id : 1400243099538348817
     type_code : 27
     code : |1+
      procédure Constructeur()
      
     type : 589824
   -
     name : Destructeur
     procedure_id : 1400243099538414353
     type_code : 28
     code : |1+
      procédure Destructeur()
      
     type : 655360
   -
     name : addItemById
     procedure_id : 1400243550522537617
     type_code : 12
     code : |1-
      // Redéfinition de la méthode ClColObjDB.addItemById
      PROCÉDURE addItemById(LOCAL nId_P est un entier):Vide
      :ZF_addItem(ClDbTache.GetObj(nId_P))
     type : 458752
   -
     name : Init
     procedure_id : 1400244594205273017
     type_code : 12
     code : |1+
      // Redéfinition de la méthode ClColObjDB.Init
      PROCÉDURE  Init():Vide
      ZF_InitCol(:m_aoTaches)
     type : 458752
   -
     name : aItems
     procedure_id : 1400245552047362066
     type_code : 12
     code : |1-
      // Redéfinition de la méthode ClColObjDB.aItems
      PROCÉDURE aItems():tableau de ClDbTache dynamique
      renvoyer :m_aoTaches
     type : 458752
   -
     name : addItemBySource
     procedure_id : 1420665888001478384
     type_code : 12
     code : |1-
      // Redéfinition de la méthode ClColObjDB.addItemBySource
      PROCÉDURE protégée virtuelle addItemBySource(sdSource_p est une Source de Données):Vide
      
      oTache est un ClDbTache(ClZF_ObjDbLs.cstModeSansChargement)
      :ZF_addItemBySource_prot(sdSource_p, oTache, sdSource_p.IDScr_Tache)
     type : 458752
   -
     name : pre_load
     procedure_id : 1429594557999032597
     type_code : 12
     code : |1-
      // Redéfinition de la méthode ClZF_ColObjDB.pre_load
      PROCÉDURE PROTÉGÉE pre_load(sdSource_P est une Source de Données)
      
      //aLstUS est un tableau d'entiers
      sListeUS est une chaîne
      sCle est une chaîne
      
      HLitPremier(sdSource_P,hForwardOnly+hSansRafraîchir)
      TANTQUE PAS HEnDehors(sdSource_P)
      //	si TableauCherche(aLstUS,tcLinéaire,sdSource_P.IDScr_UserStory) = -1 ALORS
      //		TableauAjoute(aLstUS,sdSource_P.IDScr_UserStory)
      		
      		
      		sCle = ClZF_ObjDB.ZF_sCleOdb("ClUserStory", sdSource_P.IDScr_UserStory)
      		
      		SI ClZF_App.mg_aoInstances[sCle]..Vide ALORS
      			sListeUS += [", "] + sdSource_P.IDScr_UserStory
      		FIN
      //	FIN
      	HLitSuivant(sdSource_P)
      FIN
      
      //Le traitement de préchargement n'est utils que si on a plusieurs éléments à précharger (sinon, on passe par le chargement std)
      si Position(sListeUS, ",") > 0 ALORS
      	oColUs est un ClColUserStory()
      	oColUs.ZF_LoadSQL([
      		SELECT Scr_UserStory.*
      		FROM Scr_UserStory
      		WHERE Scr_UserStory.IDScr_UserStory IN ([%sListeUS%])
      		])
      FIN
     type : 458752
   -
     name : oTaches_MesBrouillons
     procedure_id : 1456279292602866108
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] oTaches_MesBrouillons ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	ClColTaches : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      //	bForceCharge_p (booléen - valeur par défaut=0) : <indiquez ici le rôle de bForceCharge_p>
      FONCTION globale oTaches_MesBrouillons(oUser_p est un ClDbUsr):ClColTaches
      
      //sdMesBrouillons est une Source de Données
      sReq est une chaîne
      oTaches est un ClColTaches
      
      	
      //Récupération des taches en brouillon, de l'utilisateur.
      sReq = [
      	SELECT
      		Scr_Tache.*
      		--Scr_Tache.IDScr_Tache
      	FROM Scr_Tache
      	WHERE Scr_Tache.Top_Brouillon = 1
      		AND Scr_Tache.IDScr_Usr_createur = [%oUser_p.ZF_Get_IdUnique()%]	
      ]
      
      oTaches.ZF_LoadSQL(sReq)
      
      
      renvoyer oTaches
     type : 458752
   -
     name : oTaches_MesTaches
     procedure_id : 1456279296898030950
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] oTaches_MesTaches ()
      //
      // Paramètres :
      //	Aucun
      
      // Valeur de retour :
      // 	ClColTaches : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      //	bForceCharge_p (booléen - valeur par défaut=0) : <indiquez ici le rôle de bForceCharge_p>
      FONCTION globale oTaches_MesTaches(oUser_p est un ClDbUsr):ClColTaches
      
      sReq			est une chaîne
      oTachesEnDev	est un ClColTaches
      
      
      //Récupération des taches en cours, de l'utilisateur.
      sReq = [
      	SELECT
      		Scr_Tache.*
      		--Scr_Tache.IDScr_Tache
      	FROM Scr_Tache
      	WHERE Scr_Tache.Top_Brouillon = 0
      		AND Scr_Tache.Top_Annule = 0
      		AND Scr_Tache.Top_Realise = 0
      		AND Scr_Tache.Num_Sprint_Demarrage is not Null
      		AND Scr_Tache.IDScr_Usr_Dev = [%oUser_p.ZF_Get_IdUnique()%]
      		AND Scr_Tache.Statut <> [%ClDbTache.cstStatut_Suspendu%]
      ]
      
      oTachesEnDev.ZF_LoadSQL(sReq)
      
      renvoyer oTachesEnDev
     type : 458752
   -
     name : Sprint_Taches
     procedure_id : 1456283304118786604
     type_code : 12
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] Sprint_Taches (<oSprint_P> est ClDbSprint)
      // Paramètres :
      //	oSprint_P (ClDbSprint) : <indiquez ici le rôle de oSprint_P>
      // Valeur de retour :
      // 	tableau (STR_Tache) : <indiquez ici le rôle de la valeur de retour>
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      //	nNumSprint_p (entier) : <indiquez ici le rôle de nNumSprint>
      PROCEDURE globale Sprint_Taches(oSprint_P est un ClDbSprint):tableau de str_Tache
      
      // a faire : a supprimer
      
      
      //Tableau des taches du sprint
      aTaches est un tableau de STR_Tache
      
      //Structure d'une tache
      stTache est un STR_Tache
      
      sReq est une chaine
      sdRechercheTaches est une source de Données
      
      sReq = [
      	SELECT 
      		Scr_UserStory.JAiBesoinDe,
      		Scr_Tache.IDScr_Tache,
      		(Scr_Tache.Num_Sprint_Demarrage <> 0) AS Top_EstDemarree,
      		Scr_Tache.Num_Sprint_Fin,
      		case when (Scr_Tache.Num_Sprint_Fin = 0 AND Scr_Tache.Num_Sprint_Demarrage <> 0) then
      			2
      		else
      			case when Scr_Tache.Num_Sprint_Fin <> 0 then
      				3
      			else
      				1
      			end
      		end AS val_etat		
      	
      	FROM Scr_Tache
      		INNER JOIN Scr_UserStory ON (Scr_UserStory.IDScr_UserStory = Scr_Tache.IDScr_UserStory)
      	
      	WHERE Scr_Tache.Num_Sprint_Demarrage = [%oSprint_P.ZF_Get_IdUnique()%]
      	
      	ORDER BY val_etat
      ]
      
      ClZF_ObjDbLs.mg_oApp.Rsql(sdRechercheTaches,sReq)
      	
      pour TOUT sdRechercheTaches 
      	stTache = COL_Scrum.Tache_Charger(sdRechercheTaches.IDScr_Tache) //Procédure qui rempli la structure
      	selon sdRechercheTaches.val_etat
      		cas 1 : 
      			stTache.sEtat = "A faire"
      		cas 2 :
      			stTache.setat = "Commencée"
      		cas 3 :
      			stTache.setat = "Terminée"
      		AUTRE CAS	
      	FIN
      	
      	stTache.sBesoinUserStory = sdRechercheTaches.JAiBesoinDe
      	
      	tableauajoute(aTaches,stTache)
      	
      FIN
      
      HAnnuleDéclaration(sdRechercheTaches)
      
      RENVOYER aTaches
     type : 458752
   -
     name : aoFromUS
     procedure_id : 1456584042325903609
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] aoFromUS (<oUS_p> est ClDbUserStory [, <bForceCharge_p> est booléen])
      //
      // Paramètres :
      //	oUS_p (ClDbUserStory) : <indiquez ici le rôle de oUS_p>
      //	bForceCharge_p (booléen - valeur par défaut=0) : <indiquez ici le rôle de bForceCharge_p>
      
      // Valeur de retour :
      // 	ClColTaches : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      
      FONCTION globale aoFromUS(oUS_p est un ClDbUserStory, LOCAL bForceCharge_p est un booléen = faux):ClColTaches
      
      sReq est une chaine
      oColTachesRetour est un ClColTaches dynamique
      
      si oUS_p.p_ZF_aListCol[cstTachesDeUS]..vide alors
      	oUS_p.p_ZF_aListCol[cstTachesDeUS] = allouer un ClColTaches
      FIN
      
      oColTachesRetour <- oUS_p.p_ZF_aListCol[cstTachesDeUS]
      
      si pas oColTachesRetour.p_bEstCharge ou bForceCharge_p alors
      
      	oColTachesRetour.ZF_vider()
      	//trace("US : " + :Get_IdUnique())
      	sReq = [
      		SELECT 
      			Scr_Tache.*
      			--Scr_Tache.IDScr_Tache
      			
      		FROM Scr_Tache
      		
      		WHERE Scr_Tache.IDScr_UserStory = [%oUS_p.Get_IdUnique()%]
      		
      		ORDER BY Scr_Tache.Ordre,
      			Scr_Tache.CodeTache
      	]
      	oColTachesRetour.ZF_LoadSQL(sReq)
      fin
      
      
      RENVOYER oColTachesRetour
     type : 458752
   -
     name : oFromProjet
     procedure_id : 1456656013245888900
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] oFromProjet ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	ClColTaches : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure publique globale oFromProjet(oPrj_p est un ClDbProjet):ClColTaches
      
      oColTaches		est un ClColTaches
      sReq			est une chaîne
      
      sReq = [
      select
      	Scr_Tache.*
      FROM Scr_Tache
      	INNER JOIN Scr_UserStory ON (Scr_UserStory.IDScr_UserStory = Scr_Tache.IDScr_UserStory)
      where Scr_UserStory.IDScr_Projet = [%oPrj_p.ZF_Get_IdUnique()%]
      ]
      oColTaches.ZF_LoadSQL(sReq)
      
      renvoyer oColTaches
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BwAAAAcAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : Classe1
resources :
 string_res :
  identifier : 0x136ea9a72325c19d
  internal_properties : BwAAAAcAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BwAAAAcAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
