#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_Charge_UI
 major_version : 26
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1f9d41bc01e1f213
 internal_properties : BgAAAAYAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1+
      
      CONSTANTE
      	cstObjectifChargeCumule	= 4
      FIN
      
      
      
      //////////////////////////////////////////////////////////////////////////
      STR_Temps_validation_Spr est une Structure
      	nDemarre	est un entier
      	nFin		est un entier
      	nCumul		est un entier
      	nObjectif	est un entier
      	sEtiquette	est une chaîne
      FIN
      
      STR_Temps_validation est une structure
      	sTitre		est une chaîne
      	aStSeries	est un tableau associatif de STR_Temps_validation_Spr
      fin
      
      
      //////////////////////////////////////////////////////////////////////////
      STR_Evol_Charge_Projet_Spr est une Structure
      	nCharge			est un entier
      	nChargeCumul	est un entier
      	nChargeImpond	est un entier
      	nChargeEngage	est un entier
      	sEtiquette		est une chaîne
      FIN
      
      STR_Evol_Charge_Projet est une structure
      	sTitre		est une chaîne
      	aStSeries	est un tableau associatif de STR_Evol_Charge_Projet_Spr
      fin
      
      
      //////////////////////////////////////////////////////////////////////////
      STR_Projection_Spr est une Structure
      	nProj		est un entier
      	nReal		est un entier
      FIN
      
      STR_Projection est une structure
      	sTitre		est une chaîne
      	aStSeries	est un tableau associatif de STR_Projection_Spr
      fin
      
      
      //////////////////////////////////////////////////////////////////////////
      STR_Charge_Spr est une Structure
      	nPts		est un entier
      FIN
      
      STR_Charge_InfoPrj est une Structure
      	sNom		est une chaîne
      	nCouleur	est un entier
      	aSpr		est un tableau associatif de STR_Charge_Spr
      FIN
      
      STR_Charge est une structure
      	sTitre		est une chaîne
      	nVelocite	est un entier
      	aStProjets	est un tableau associatif de STR_Charge_InfoPrj
      	aStListeSprints est un tableau associatif de chaine
      fin
      
     type : 720896
  procedures :
   -
     name : Graphe_Temps_validation
     procedure_id : 2278049640217725942
     type_code : 15
     code : |1-
      procédure Graphe_Temps_validation(local nIdProjet_P est un entier):STR_Temps_validation
      
      stRetour		est un STR_Temps_validation
      nCumul			est un entier
      oSprint			est un ClSprint dynamique
      oTache			est un ClTache dynamique
      oPrj			est un ClProjet dynamique
      sNumSprint		est une chaîne
      
      
      stRetour.sTitre	= "Analyse des temps de mise en production des taches réalisées" + rc
      
      POUR TOUT ELEMENT oSprint DE ClSprint.aoListeSprint()
      	sNumSprint										= oSprint.Get_IdUnique()
      	
      	stRetour.aStSeries[sNumSprint]					= allouer un STR_Temps_validation_Spr
      	stRetour.aStSeries[sNumSprint].sEtiquette		= sNumSprint + " - " + oSprint.sSprint_Date()
      	
      	SI nIdProjet_P = 0 ALORS
      		si val(sNumSprint) < goapp.m_nNumeroDuSprintActuel ALORS
      			stRetour.aStSeries[sNumSprint].nObjectif	= oSprint.p_nVelociteMoyenneRes
      		sinon
      			stRetour.aStSeries[sNumSprint].nObjectif	= goapp.m_nVelociteMoyenne
      		FIN
      		stRetour.aStSeries[sNumSprint].nObjectif		= stRetour.aStSeries[sNumSprint].nObjectif * cstObjectifChargeCumule
      	FIN
      FIN
      
      SI nIdProjet_P = 0 ALORS
      	//Tous les projets
      	POUR TOUT ELEMENT oSprint DE ClSprint.aoListeSprint()
      		sNumSprint									= oSprint.Get_IdUnique()
      		stRetour.aStSeries[sNumSprint].nDemarre		= oSprint.nGetNbPointsDemarre()
      		stRetour.aStSeries[sNumSprint].nFin			= oSprint.nGetNbPointsRealises()
      	FIN
      	
      	stRetour.sTitre += "Tout projets"
      	
      SINON
      	oPrj <- ClProjet.GetObj(nIdProjet_P)
      
      	//Projet en cours
      	POUR TOUT ELEMENT oTache DE oPrj.aoListeTaches()
      		SI oTache.p_nNum_Sprint_Demarrage <> 0 ALORS
      			stRetour.aStSeries[oTache.p_nNum_Sprint_Demarrage].nDemarre += oTache.p_nPoids
      		FIN
      		SI oTache.p_nNum_Sprint_Fin <> 0 ALORS
      			stRetour.aStSeries[oTache.p_nNum_Sprint_Fin].nFin += oTache.p_nPoids
      		FIN
      	FIN
      	
      	stRetour.sTitre += oPrj.p_sNom
      FIN
      
      
      POUR TOUT stSprint_Tmp, sCle de stRetour.aStSeries
      	SI sCle = "0" ou Val(sCle) > goApp.m_nNumeroDuSprintActuel ou (nCumul = 0 et stSprint_Tmp.nDemarre = 0) ALORS
      		TableauSupprime(stRetour.aStSeries, sCle)
      	sinon
      		nCumul += stSprint_Tmp.nDemarre - stSprint_Tmp.nFin
      		stRetour.aStSeries[sCle].nCumul = nCumul
      	FIN
      fin
      
      
      
      renvoyer stRetour
     type : 458752
   -
     name : Graph_Projection
     procedure_id : 2279284177032790963
     type_code : 15
     code : |1+
      procédure Graph_Projection():STR_Projection
      
      stRetour				est un STR_Projection
      stSp_Tmp				est un STR_Projection_Spr
      
      rNbSprintRestantEstime	est un réel
      nPointsTotal			est un entier	= ClTache.Charge_Totale()
      nVelociteMoyenne		est un entier	= goApp.m_nVelociteMoyenne
      oSprint					est un ClSprint dynamique
      nNbPointsRestant		est un entier
      
      
      stSp_Tmp.nProj = nPointsTotal
      stSp_Tmp.nReal = nPointsTotal
      
      pour tout element oSprint de ClSprint.aoListeSprint()
      	
      	SI oSprint.p_bTop_Termine ALORS
      		stSp_Tmp.nReal -= oSprint.nGetNbPointsRealises()
      		nNbPointsRestant = stSp_Tmp.nReal
      	SINON
      		stSp_Tmp.nReal -= nVelociteMoyenne
      	FIN
      	
      	stSp_Tmp.nProj -= nVelociteMoyenne
      	
      	
      	stSp_Tmp.nProj = max(stSp_Tmp.nProj, 0)
      	stSp_Tmp.nReal = max(stSp_Tmp.nReal, 0)
      	
      	stRetour.aStSeries[oSprint.sSprint_Date()] = stSp_Tmp
      	
      	si stSp_Tmp.nProj = 0 ALORS
      		sortir
      	FIN
      FIN
      
      rNbSprintRestantEstime = Abs(nNbPointsRestant / nVelociteMoyenne)
      
      stRetour.sTitre = "Projection" + RC + " Nombre de sprints restants estimé : " + Gauche(NumériqueVersChaîne(rNbSprintRestantEstime),4)
      
      renvoyer stRetour
     type : 458752
   -
     name : Graphe_Evol_Charge_projet
     procedure_id : 2287386826103726309
     type_code : 15
     code : |1-
      procédure Graphe_Evol_Charge_projet(local znIdProjet_P est un entier):STR_Evol_Charge_Projet
      
      stRetour		est un STR_Evol_Charge_Projet
      nCumul			est un entier
      nCumulEngage	est un entier
      oSprint			est un ClSprint dynamique
      oTache			est un ClTache dynamique
      oPrj			est un ClProjet dynamique
      sNumSprint		est une chaîne
      
      
      stRetour.sTitre	= "Analyse de l'évolution de la charge du projet" + rc
      
      POUR TOUT ELEMENT oSprint DE ClSprint.aoListeSprint()
      	sNumSprint										= oSprint.Get_IdUnique()
      	
      	stRetour.aStSeries[sNumSprint]					= allouer un STR_Evol_Charge_Projet_Spr
      	stRetour.aStSeries[sNumSprint].sEtiquette		= sNumSprint + " - " + oSprint.sSprint_Date()
      	
      FIN
      
      
      
      oPrj <- ClProjet.GetObj(znIdProjet_P)
      stRetour.sTitre += oPrj.p_sNom
      POUR TOUT ELEMENT oTache DE oPrj.aoListeTaches()
      	stRetour.aStSeries[oTache.p_nNum_Sprint_Creation].nCharge			+= oTache.p_nPoids
      	stRetour.aStSeries[oTache.p_nNum_Sprint_Realisation].nChargeEngage	+= oTache.p_nPoids
      FIN
      
      
      
      POUR TOUT stSprint_Tmp, sCle de stRetour.aStSeries
      	SI sCle = "0" ou Val(sCle) > goApp.m_nNumeroDuSprintActuel ou (nCumul = 0 et stSprint_Tmp.nCharge = 0) ALORS
      		TableauSupprime(stRetour.aStSeries, sCle)
      	sinon
      		nCumul									+= stSprint_Tmp.nCharge
      		nCumulEngage							+= stSprint_Tmp.nChargeEngage
      		stRetour.aStSeries[sCle].nChargeCumul	= nCumul
      		stRetour.aStSeries[sCle].nChargeEngage	= nCumulEngage
      		stRetour.aStSeries[sCle].nChargeImpond	= nCumul * (1 + ClProjet.cstTauxImponderable * (nCumul - nCumulEngage) / nCumul)
      	FIN
      fin
      
      
      
      renvoyer stRetour
     type : 458752
   -
     name : Graphe_Charge_Sprints
     procedure_id : 1158891410392662761
     type_code : 15
     code : |1-
      procédure Graphe_Charge_Sprints(LOCAL nSprint_p est un entier, ...
      	LOCAL nNbSprint_p est un entier, ...
      	LOCAL eSelecteur_p est un ClTache.ETypeCharge,...
      	LOCAL nChargeReccurcive_p est un entier):STR_Charge
      		
      
      
      
      oPrj			est un ClProjet dynamique
      oSprint			est un ClSprint dynamique
      nCptSpr			est un entier
      nNumPrj			est un entier
      nNumSprint		est un entier
      aTableauProjet	est un tableau de ClProjet	= ClProjet.aoProjets_sur_periode(nSprint_p, nNbSprint_p, eSelecteur_p)
      nPoints			est un entier
      stRetour		est un STR_Charge
      stProjet_Tmp	est un STR_Charge_InfoPrj
      
      
      stRetour.sTitre = "Planification des taches"
      SELON eSelecteur_p
      	CAS ClTache.ETypeCharge.Charge_réelle
      		stRetour.sTitre += " en production"
      	CAS ClTache.ETypeCharge.Charge_prévisionelle
      		stRetour.sTitre += " prévisionnel"	
      FIN
      
      
      nNumPrj = 0
      //parcours les projets compris dans l'intervalle de sprints
      POUR TOUT ELEMENT oPrj DE aTableauProjet
      	nNumPrj++
      	VariableRAZ(stProjet_Tmp)
      	//donne une couleur à la série
      	stProjet_Tmp.nCouleur			= DonneCouleur(nNumPrj, coulSérieDéfaut)
      	//nom du projet pour le nom de l'étiquette 
      	stProjet_Tmp.sNom				= oPrj.p_oUsr_ChefProjet.p_sNom + RC + oPrj.p_sNom
      	stRetour.aStProjets[nNumPrj]	= stProjet_Tmp
      FIN
      
      si nChargeReccurcive_p > 0 alors
      	nNumPrj++
      	VariableRAZ(stProjet_Tmp)
      	//nom du projet pour le nom de l'étiquette 
      	stProjet_Tmp.sNom				= "Charge récursive" + RC + "(Impondérables)"
      	//donne une couleur à la série
      	stProjet_Tmp.nCouleur			= COL_Scrum.gnCouleur_Gris
      	stRetour.aStProjets[nNumPrj]	= stProjet_Tmp
      fin
      
      
      nNumSprint = nSprint_p
      POUR nCptSpr = 1 _À_ nNbSprint_p //pour chaque sprint on effectue la boucle suivante
      	
      	//affichage des dates du sprint en graduation
      	oSprint <- ClSprint.GetObj(nNumSprint)
      	//Récupération des étiquettes des sprints
      	stRetour.aStListeSprints[nNumSprint] = oSprint.Get_IdUnique() + rc + oSprint.sSprint_Date()
      	
      	nNumPrj = 0
      	//parcours des projets compris dans l'intervalle de sprints
      	POUR TOUT ELEMENT oPrj DE aTableauProjet
      		nNumPrj++
      		
      		//Récupération du nb de points du projet, sur le sprint
      		nPoints = oPrj.Projet_Sprint_Points(nNumSprint,eSelecteur_p)
      		
      		//ajout des donnée dans le graphe
      		si stRetour.aStProjets[nNumPrj].aSpr[nNumSprint]..Vide ALORS
      			stRetour.aStProjets[nNumPrj].aSpr[nNumSprint] = allouer un STR_Charge_Spr
      		FIN
      		stRetour.aStProjets[nNumPrj].aSpr[nNumSprint].nPts = nPoints
      	FIN
      	
      	//A t on un charge prévisionelle récursive ?
      	SI nChargeReccurcive_p > 0 ALORS
      		nNumPrj++
      		
      		SI stRetour.aStProjets[nNumPrj].aSpr[nNumSprint]..Vide ALORS
      			stRetour.aStProjets[nNumPrj].aSpr[nNumSprint] = allouer un STR_Charge_Spr
      		FIN
      		
      		si nNumSprint > goapp.m_nNumeroDuSprintActuel ALORS
      			//ajout des donnée dans le graphe
      			nPoints = nChargeReccurcive_p * (nNumSprint - goApp.m_nNumeroDuSprintActuel)
      			stRetour.aStProjets[nNumPrj].aSpr[nNumSprint].nPts = nPoints
      		sinon
      			stRetour.aStProjets[nNumPrj].aSpr[nNumSprint].nPts = 0
      		FIN
      	FIN
      		
      	nNumSprint++
      FIN
      
      stRetour.nVelocite = goApp.m_nVelociteMoyenne
      
      
      
      renvoyer stRetour
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BgAAAAYAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x1f9d419f01df830d
  internal_properties : BgAAAAYAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BgAAAAYAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
