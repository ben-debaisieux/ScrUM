#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : ClZF_App
 major_version : 27
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x13c328cd24e8c007
 internal_properties : BwAAAAcAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  internal_properties : BwAAAAcAAACmcEcPUOl8P88f4DqAteA6m/Mt111GGOClrNjaLJ9vO63bNEtdrqYoCCnjX1eG34p8AOi72Du5JSuppQ==
  type_code : 10
  p_codes :
   -
     code : |1+
      STR_metrique est une structure
      	nNbRecherches						est un entier
      	nNbRequetes							est un entier
      	nNbTransactions						est un entier
      	nNbDeclarationObjBd					est un entier
      	nNbDeclarationObjBd_Cache			est un entier
      	nNbDeclarationObjBd_NonCache		est un entier
      	nNbObjBd_Expire						est un entier
      fin
      
      ClZF_App est une Classe, abstraite
      protegé
      	m_ZF_cnxBDD						est une connexion
      	
      PRIVÉ
      	m_ZF_nNbreTrsOuverte			est un entier
      	m_ZF_bAnnulationDemande			est un booléen
      	m_ZF_bSingleton					est un booléen
      
      public
      	m_aMetriques						est un tableau de 1 STR_metrique
      	
      GLOBAL
      PUBLIC
      	mg_aoInstances						est un tableau associatif de ClZF_ObjDBls dynamique
      	
      	mg_oExSelonCasNonTraite				est un ClZF_Exception dynamique
      	mg_oExTypeColNonDefinit				est un ClZF_Exception dynamique
      prive
      	mg_oExClasseNonParametree			est un ClZF_Exception dynamique
      	mg_oExPlusieursInstancesClAapp		est un ClZF_Exception dynamique
      	mg_oExErreurSQL						est un ClZF_Exception dynamique
      	mg_oExErreurTRS						est un ClZF_Exception dynamique
      protege
      	mg_aZF_aGetId						est un tableau associatif de chaine
      FIN
      
      ::mg_oExSelonCasNonTraite = allouer un ClZF_Exception("Valeur non évaluée sans un ""SELON"" : ""%1"".", ...
      	ClZF_Exception.cstInfoLogAssert)
      
      ::mg_oExPlusieursInstancesClAapp = allouer un ClZF_Exception("Une seule instance de la classe ""%1"" est permise.", ...
      	ClZF_Exception.cstInfoLogSimple)
      	
      ::mg_oExErreurSQL = allouer un ClZF_Exception("Echec de la récupération des données", ...
      	ClZF_Exception.cstInfoLogHF)
      
      ::mg_oExErreurTRS = allouer un ClZF_Exception("Echec de la transaction", ...
      	ClZF_Exception.cstInfoLogHF)
      
      ::mg_oExTypeColNonDefinit = allouer un ClZF_Exception("Aucun prototype de collection trouvée dans le projet, pour la clé ""%1"".", ...
      	ClZF_Exception.cstInfoLogSimple)
      
      ::mg_oExClasseNonParametree = allouer un ClZF_Exception("La classe ""%1"" n'est pas paramétrée pour instancier des objets.", ...
      	ClZF_Exception.cstInfoLogSimple)
      
      
      
      constante
      	cstTimeOutDef = 86400
      fin
     type : 131072
  procedures :
   -
     name : Constructeur
     internal_properties : BwAAAAcAAADNVx0MUNTe+ZBvdzhHkp7zdKNq9AbltHNMVJDYGM1YxZWcS+SdrE6MuXFbZQWCj4Ul+gaKyZMWgzguAJoqd+BkZORzyMbFTa7SyVIU9pA6fgRfgp60pxzaSYpPRH6UJ4h1k8EBc9wHGxKMqoMTBS0ceVTrLCZUf7LSADgjOq+mrv4AQZ2tt2WxlQBdhOpfh8olr1OYY8c9az0FfJI5x6PP4U1fzJP8tdsxeNkYvz0ZlHPoKDbnBQ43aOXxXRBH+vgHTTRnEay4kOYxzjDz4Y0n/1jfa/c7QjBqAnTa3op8UHVYJ5YXvAFnRMaaXEEvG/cqJwox6giqi2ek2tQWZVpErbtPGOhgH+NWGjTn7QB6
     procedure_id : 1424026768731914247
     type_code : 27
     code : |1+
      PROCEDURE Constructeur()
      
      si pas :m_ZF_bSingleton ALORS
      	:m_ZF_bSingleton = vrai
      sinon
      	::mg_oExPlusieursInstancesClAapp.ZF_Declenche([objet..Classe])
      	//ExceptionDéclenche(1, "Une seule instance de la classe ""[%%]"" est permise.")
      FIN
      
      //On référence l'objet App, dans les classes d'acces aux données
      ClZF_ObjDbLs.mg_oApp <- objet
      
      HSurErreur("*",hErrTout,"")
      
      :cnxbdd()
      
      hgererep(faux)
      
     type : 589824
   -
     name : Destructeur
     procedure_id : 1424026768731979783
     type_code : 28
     code : |1+
      PROCEDURE Destructeur()
      
      //ZF_LibereInstancesMemo()
      
      // Fermeture de tous les fichiers
      SI PAS HFerme("*") ALORS
      	Erreur(HErreurInfo(hErrComplet))
      FIN
       
      SI PAS HFermeConnexion(:m_ZF_cnxBDD) ALORS
      	Erreur(HErreurInfo(hErrComplet))
      FIN
      
     type : 655360
   -
     name : Rsql
     procedure_id : 1424026768732045319
     type_code : 12
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //Rsql (<sdSource_P> est objet source de données, <sReq_P> est chaîne)
      //
      // Paramètres :
      //	sdSource_P (objet source de données) : <indiquez ici le rôle de sdSource>
      //	sReq_P (chaîne ANSI) : <indiquez ici le rôle de sReq_P>
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      //	bSansCorrection_p (booléen - valeur par défaut=0) : <indiquez ici le rôle de bSansCorrection_p>
      FONCTION Rsql(sdSource_P est source de données , sReq_P est une chaîne)<métier>:vide
      
      //trace("----------------------------")
      //trace(sReq_P)
      //trace(dbginfo(dbgPile))
      SI PAS HExécuteRequêteSQL( sdSource_P, :m_ZF_cnxBDD, hRequêteSansCorrection, sReq_P) ALORS
      	::mg_oExErreurSQL.ZF_Declenche()
      FIN
      
      //Métriques : Nombre d'exécutions de requetes
      :m_aMetriques[1].nNbRequetes++
      
      //renvoyer vrai
     type : 458752
   -
     name : TranDebut
     procedure_id : 1424026768732110855
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //TranDebut ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE TranDebut():Vide
      
      
      :m_ZF_nNbreTrsOuverte++
      
      SI :m_ZF_nNbreTrsOuverte = 1 ALORS
      	//Lors de la 1ere transaction, on réinitialise la valeur mémorisant l'annulation de transaction.
      	:m_ZF_bAnnulationDemande = Faux
      	
      	//	trace("TD " + :nNbreTrsOuverte)
      	
      	//On active la transaction qu'au 1er appel de la procédure.
      	SI PAS HTransactionDébut(:m_ZF_cnxBDD) ALORS
      		::mg_oExErreurTRS.ZF_Declenche()
      		//ExceptionDéclenche(1, HErreurInfo(hErrMessage))
      	FIN
      fin
     type : 458752
   -
     name : TranFin
     procedure_id : 1424026768732176391
     type_code : 12
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //TranFin ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE TranFin():Vide
      
      
      //On décrémente le compteur de transactions
      :m_ZF_nNbreTrsOuverte--
      
      //A t on eu une erreur pendant une transaction ?
      SI PAS :m_ZF_bAnnulationDemande ALORS
      	//Non : on valide réellement la transaction.
      	
      	//Trace("TF " + :nNbreTrsOuverte)
      
      	SI :m_ZF_nNbreTrsOuverte = 0 ALORS
      		si pas HTransactionFin(:m_ZF_cnxBDD) ALORS
      			::mg_oExErreurTRS.ZF_Declenche()
      			//ExceptionDéclenche(1,HErreurInfo(hErrMessage))
      		FIN
      	FIN
      sinon
      	:TranAnnule()
      FIN
     type : 458752
   -
     name : TranAnnule
     procedure_id : 1424026768732241927
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //TranAnnule ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE TranAnnule():Vide
      
      //On décrémente le nombre de transactions ouvertes, et on mémorise une annulation de transaction.
      :m_zf_nNbreTrsOuverte--
      :m_ZF_bAnnulationDemande = Vrai
      
      //Trace("TA " + :nNbreTrsOuverte)
      
      si pas HTransactionAnnule(:m_ZF_cnxBDD) ALORS
      	::mg_oExErreurTRS.ZF_Declenche()
      	//ExceptionDéclenche(1, HErreurInfo(hErrMessage))
      FIN
     type : 458752
   -
     name : sFormateTexteSQL
     internal_properties : BwAAAAcAAADYuPST6CP+T+K2ZU37o7g3n8Kew/nVjSZD5G6OyRuT2Yo67DV/AZmlWI7RE7NW48hb
     procedure_id : 1424026768732307463
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] sFormateTexteSQL (<sTexte_P> est chaîne)
      //
      // Paramètres :
      //	sTexte_P (chaîne ANSI) : <indiquez ici le rôle de sTexte_P>
      // Valeur de retour :
      // 	chaîne ANSI : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE global sFormateTexteSQL(local sTexte_P est une chaîne):chaine
      
      renvoyer remplace(sTexte_P, "'", "''")
     type : 458752
   -
     name : cnxBdd
     procedure_id : 1424026768732372999
     type_code : 12
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // cnxBdd ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure abstraite cnxBdd()
      
     type : 458752
   -
     name : CreeObj
     procedure_id : 1424026768732438535
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] CreeObj (<sClasse_P> est chaîne, <nId_P> est entier)
      //
      // Paramètres :
      //	sClasse_P (chaîne ANSI) : <indiquez ici le rôle de sClasse_P>
      //	nId_P (entier) : <indiquez ici le rôle de nId_P>
      
      // Valeur de retour :
      // 	ClZF_ObjDbLs : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      //	sdSource_P (source de données) : <indiquez ici le rôle de sdSource_P>
      procédure CreeObj(sClasse_P est une chaîne, local nId_P est un entier)<metier>:ClZF_ObjDBls
      
      
      oRetour est un ClZF_ObjDbLs dynamique
      
      ::PrepareCreationSiBesoin(sClasse_P)
      
      
      QUAND EXCEPTION DANS
      	oRetour <- Exécute(::mg_aZF_aGetId[sClasse_P], nId_P)
      FAIRE
      	//A faire : détecter le code d'erreur qui correcpond à la non implémentation de la classe et inverser le déclenchement de l'exception
      	selon ExceptionInfo(errCode)
      		CAS ClZF_ObjDbLs.mg_oExPositionnementImpossible.ZF_Code
      			exceptionpropage()
      		AUTRE CAS
      			::mg_oExClasseNonParametree.ZF_Declenche([sClasse_P])
      	FIN
      fin
      
      
      renvoyer oRetour
     type : 458752
   -
     name : ExceptGenerale
     procedure_id : 1434630806552584165
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //ExceptGenerale ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure abstraite ExceptGenerale()<metier>:vide
      
      
      //DélaiAvantFermeture(1000)
      //Info("Suite à une erreur, le programme doit être relancé.")
      //FinProgramme(Faux)
     type : 458752
   -
     name : GetMetriques
     procedure_id : 1442558804699502758
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GetMetriques ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	tableau (STR_metrique) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure publique GetMetriques()<metier>:tableau de STR_metrique
      
      
      :m_aMetriques[1].nNbTransactions = :m_ZF_nNbreTrsOuverte
      TableauInsère(:m_aMetriques, 1)
      si :m_aMetriques..Occurrence > 60 ALORS
      	Dimension(:m_aMetriques, 60)
      FIN
      
      
      renvoyer :m_aMetriques
     type : 458752
   -
     name : ZF_LibereInstancesMemo
     procedure_id : 1442820196631151189
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // ZF_LibereInstancesMemo ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure ZF_LibereInstancesMemo()<métier>:Vide
      
      oInstance est un ClZF_ObjDbLs dynamique
      sKey est une chaîne
      POUR TOUT ÉLÉMENT oInstance, sKey DE ::mg_aoInstances
      	si oInstance = Null ALORS
      		trace("Objet null référencé : " + sKey)
      	sinon
      		si pas oInstance.ZF_bVerifPointeur() ALORS
      			stop
      		FIN
      		libérer oInstance
      	FIN
      	TableauSupprime(::mg_aoInstances, sKey)
      FIN
      //TableauSupprimeTout(::mg_aoInstances)
     type : 458752
   -
     name : GetCol
     procedure_id : 1459473614645113972
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GetCol (<oObjDB_p> est ClZF_ObjDbLs, <sCle_p> est chaîne)
      //
      // Paramètres :
      //	oObjDB_p (ClZF_ObjDbLs) : <indiquez ici le rôle de oObjDB_p>
      //	sCle_p (chaîne ANSI) : <indiquez ici le rôle de sCle_p>
      // Valeur de retour :
      // 	ClZF_ColObjDB : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GetCol(oObjDB_p est un ClZF_ObjDbLs, sCle_p est une chaîne)<métier>:ClZF_ColObjDB
      
      SI oObjDB_p.m_ZF_aListCol[sCle_p]..Vide ALORS
      	oObjDB_p.m_ZF_aListCol[sCle_p] = :CreeCol(sCle_p)
      FIN
      
      RENVOYER oObjDB_p.m_ZF_aListCol[sCle_p]
     type : 458752
   -
     name : CreeCol
     procedure_id : 1459479116591251892
     type_code : 12
     code : |1-
      procedure protege abstraite CreeCol(sCle_p est une chaine)<metier>:ClZF_ColObjDB
      
      // Prototype : 
      //oCol est un ClZF_ColObjDB dynamique
      //SELON sCle_p
      ////	CAS ...
      ////		oCol = allouer un ClCol...
      ////	CAS ...
      ////		oCol = allouer un ClCol...
      //		
      //	AUTRE CAS
      //		::mg_oExTypeColNonDefinit.ZF_Declenche([sCle_p])
      //FIN
      //
      //RENVOYER oCol
     type : 458752
   -
     name : PrepareCreationSiBesoin
     procedure_id : 1532667798413758971
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //PrepareCreationSiBesoin (<sClasse_P> est chaîne)
      //
      // Paramètres :
      //	sClasse_P (chaîne ANSI) : <indiquez ici le rôle de sClasse_P>
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure publique globale PrepareCreationSiBesoin(sClasse_P est une chaine) <métier>:vide
      
      SI ::mg_aZF_aGetId[sClasse_P]..Vide ALORS
      	sProc	est une chaîne	= "ZF_CreeObj_[%sClasse_P%]"
      	sCode	est une chaîne	= [
      		PROCEDURE [%sProc%](nId_P est un entier):[%sClasse_P%]
      		oRetour est un [%sClasse_P%](nId_P)
      		RENVOYER oRetour
      	]
      	
      	SI Compile(sProc, sCode) <> "" ALORS
      		::mg_oExClasseNonParametree.ZF_Declenche([sClasse_P])
      	FIN
      	::mg_aZF_aGetId[sClasse_P] = sProc
      FIN
     type : 458752
   -
     name : sTypeCnx
     procedure_id : 1546472570589914485
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] sTypeCnx ()
      //
      // Paramètres :
      //	Aucun
      
      // Valeur de retour :
      // 	chaîne ANSI : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure sTypeCnx() <métier>:chaine
      renvoyer :m_ZF_cnxBDD..Provider
     type : 458752
   -
     name : TablesExclues
     procedure_id : 1559447439373642584
     type_code : 12
     code : |1-
      procédure virtuelle TablesExclues()<metier>:tableau de chaîne
      aRetour est un tableau de chaîne
      renvoyer aretour
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BwAAAAcAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : ClApp
resources :
 string_res :
  identifier : 0x1e88f2332f2b5f44
  internal_properties : BwAAAAcAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BwAAAAcAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
